version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ayursetu-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: ayursetu_platform
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ayursetu-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot1234"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: ayursetu-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ayursetu-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ayursetu-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ayursetu-network

  # Eureka Service Discovery
  eureka-service:
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    container_name: ayursetu-eureka
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - ayursetu-network
    depends_on:
      - mysql

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: ayursetu-api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - ayursetu-network
    depends_on:
      - eureka-service

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: ayursetu-user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - ayursetu-network
    depends_on:
      - eureka-service
      - mysql
      - kafka

  # Doctor Service
  doctor-service:
    build:
      context: ./doctor-service
      dockerfile: Dockerfile
    container_name: ayursetu-doctor-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - ayursetu-network
    depends_on:
      - eureka-service
      - mysql
      - kafka

  # Consultation Service
  consultation-service:
    build:
      context: ./consultation-service
      dockerfile: Dockerfile
    container_name: ayursetu-consultation-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - ayursetu-network
    depends_on:
      - eureka-service
      - mysql
      - kafka

  # Pharmacy Service
  pharmacy-service:
    build:
      context: ./pharmacy-service
      dockerfile: Dockerfile
    container_name: ayursetu-pharmacy-service
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - ayursetu-network
    depends_on:
      mysql:
        condition: service_healthy
      eureka-service:
        condition: service_started
      kafka:
        condition: service_started
    restart: unless-stopped

  # Payment Service (temporarily disabled - directory not present)
  # payment-service:
  #   build:
  #     context: ./payment-service
  #     dockerfile: Dockerfile
  #   container_name: ayursetu-payment-service
  #   ports:
  #     - "8085:8085"
  #   environment:
  #     SPRING_PROFILES_ACTIVE: docker
  #   networks:
  #     - ayursetu-network
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #     eureka-service:
  #       condition: service_started
  #     kafka:
  #       condition: service_started
  #   restart: unless-stopped

  # Notification Service
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: ayursetu-notification-service
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - ayursetu-network
    depends_on:
      mysql:
        condition: service_healthy
      eureka-service:
        condition: service_started
      kafka:
        condition: service_started
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  ayursetu-network:
    driver: bridge
