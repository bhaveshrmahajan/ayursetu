spring:
  application:
    name: notification-service
  
  datasource:
    url: jdbc:mysql://mysql:3306/notificationdb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: root1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  
  # Email Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com
  
  # Thymeleaf Configuration for Email Templates
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    encoding: UTF-8
    mode: HTML
  
  kafka:
    producer:
      bootstrap-servers: kafka:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: kafka:29092
      group-id: notification-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

# SMS Gateway Configuration
sms:
  gateway:
    provider: twilio
    twilio:
      account-sid: ${TWILIO_ACCOUNT_SID:your_twilio_account_sid}
      auth-token: ${TWILIO_AUTH_TOKEN:your_twilio_auth_token}
      from-number: ${TWILIO_FROM_NUMBER:+1234567890}
    aws:
      access-key: ${AWS_ACCESS_KEY:your_aws_access_key}
      secret-key: ${AWS_SECRET_KEY:your_aws_secret_key}
      region: ${AWS_REGION:us-east-1}

# Push Notification Configuration
push:
  firebase:
    project-id: ${FIREBASE_PROJECT_ID:your_firebase_project_id}
    private-key-id: ${FIREBASE_PRIVATE_KEY_ID:your_private_key_id}
    private-key: ${FIREBASE_PRIVATE_KEY:your_private_key}
    client-email: ${FIREBASE_CLIENT_EMAIL:your_client_email}
    client-id: ${FIREBASE_CLIENT_ID:your_client_id}

server:
  port: 8086

eureka:
  client:
    service-url:
      defaultZone: http://eureka-service:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: notification-service

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always



